	.ORIG  x3000

	LD R5,NUM
	LD R4,DST
	LD R3,SRCBGN


OUTER
;R1 CONTAIN THE MAX ADDR
;R0 IS THE MOVING POINTER
	ADD R5,R5,#-2   
	BRn  SUSPEND	
	ADD R1,R5,R3
	ADD R0,R1,#0

INNER	ADD R0,R0,#-2
	JSR EQBGN
	ADD R6,R6,#0
	BRn WRITE
	JSR CMP
	ADD R6,R6,#0
	BRnz INNER
	ADD R1,R0,#0
	JSR INNER


CMP
;CMP MEM[R0],MEM[R1], SAVE RST IN R6			
	ST R3,SAVER3	
	ST R4,SAVER4
	LDR R3,R0,#0
	LDR R4,R1,#0
	NOT R4,R4
	ADD R4,R4,#1
	ADD R6,R3,R4
	BRnp	LDREG
	LDR R3,R0,#1
	LDR R4,R1,#1
	NOT R4,R4
	ADD R4,R4,#1
	ADD R6,R3,R4	
LDREG   LD R3,SAVER3
	LD R4,SAVER4
	RET



EQBGN	
;CMP IF THE CONTENT OF R0 IF THE SRCEND
;AND STORE THE RST IN R6
	ST R4,SAVER4   
	ST R3,SAVER3   
	NOT R4,R0
	ADD R4,R4,#1
	LD R3,SRCBGN
	ADD R6,R4,R3
	LD R4,SAVER4
	LD R3,SAVER3
	RET	

WRITE
;WRITE MEM[R1] TO MEM[R4]  ,TWO LOCATION
	LDR R6,R1,#0
	STR R6,R4,#0   
	LDR R6,R1,#1
	STR R6,R4,#1
	ADD R4,R4,#2
;MOVE THE HIGNEST SRC DATA (R5) TO THE POSITION OF MAX (R1)
	LDR R1,R5,#0
	ADD R1,R1,#1
	LDR R1,R5,#1
	STR R6,R1,#-1
	JSR OUTER
	
	

SAVER3  .FILL 0
SAVER4	.FILL 0
NUM	.FILL #128
SRCBGN	.FILL x3200
DST	.FILL x4000
SUSPEND	HALT



	.END